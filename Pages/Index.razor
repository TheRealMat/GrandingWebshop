@page "/"
@page "/{Category}"

@using GrandingWebshop.Models
@using System.Text.Json;
@inject HttpClient Http

<PageTitle>Granding.dk</PageTitle>

<div class="album py-5 bg-light">
	<div class="container">

		<div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3">
			@if (root == null || root.results == null)
			{
				@for (int i = 0; i < 20; i++) 
				{
					<div class="col">
						<div class="card shadow-sm">
							<img src="..." class="card-img-top" alt="...">
							<div class="card-body">
								<p class="card-text">...</p>
								<div class="d-flex justify-content-between align-items-center">
									<div class="btn-group">
										<button type="button" class="btn btn-sm btn-outline-secondary">View</button>
										<button type="button" class="btn btn-sm btn-outline-secondary">Edit</button>
									</div>
									<small class="text-muted">9 mins</small>
								</div>
							</div>
						</div>
					</div>
				}
			}
			else
			{
				@foreach (ProductModel product in root.results)
				{
					<div class="col">
						<div class="card shadow-sm">
							<img src="@product.ImageUrl" class="card-img-top" alt="...">
							<div class="card-body">
								<p class="card-text">@product.Name</p>
								<div class="d-flex justify-content-between align-items-center">
									<div class="btn-group">
										<button type="button" class="btn btn-sm btn-outline-secondary">View</button>
										<button type="button" class="btn btn-sm btn-outline-secondary">Edit</button>
									</div>
									<small class="text-muted">9 mins</small>
								</div>
							</div>
						</div>
					</div>
				}
			}
		</div>
	</div>
</div>


@code {
	[Parameter]
	public string Category { get; set; }

    private Root? root; // response model
    int categoryId = 1; // test

    protected override async Task OnInitializedAsync()
    {
        HttpResponseMessage response = await Http.GetAsync("get_products");
        string json = await response.Content.ReadAsStringAsync();
        if (json[0] == '<')
            return; // this is not json

        root = JsonSerializer.Deserialize<Root>(json);
    }
}
