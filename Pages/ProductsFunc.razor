@page "/productsfunc"
@using GrandingWebshop.Models
@using System.Text.Json;
@inject HttpClient Http
@inject javaScriptInterface jsInterface


<PageTitle>Products test</PageTitle>

<h1>Products test (functions)</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (root == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Description</th>
                <th>In stock</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Result result in root.results)
            {
                <tr>
                    <td>@result.Id</td>
                    <td>@result.Name</td>
                    <td>@result.Description</td>
                    <td>@result.Amount</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private ProductModel[]? products;
    private Root? root;

    protected override async Task OnInitializedAsync()
    {
        HttpResponseMessage response = await Http.GetAsync("get_products");
        string json = await response.Content.ReadAsStringAsync();
        Console.WriteLine(json);

        // ResponseModel? responseModel = JsonSerializer.Deserialize<root>(json);

        // if (responseModel == null)
        // {
        //     Console.WriteLine("null (bad)");
        //     return;
        // }
        // Console.WriteLine("not null (this is good)");

        // products = responseModel.results;

        //StateHasChanged();

        root = JsonSerializer.Deserialize<Root>(json);


    }

    public class ResponseModel
    {
        public Object[]? meta { get; set; }
        public bool? success { get; set; }
        public ProductModel[]? results { get; set; }
    }

    // Root myDeserializedClass = JsonConvert.DeserializeObject<Root>(myJsonResponse);
    public class Meta
    {
        public string served_by { get; set; }
        public double duration { get; set; }
        public int changes { get; set; }
        public int last_row_id { get; set; }
        public bool changed_db { get; set; }
        public int size_after { get; set; }
        public int rows_read { get; set; }
        public int rows_written { get; set; }
    }

    public class Result
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
        public int Price { get; set; }
        public int Amount { get; set; }
    }

    public class Root
    {
        public bool success { get; set; }
        public Meta meta { get; set; }
        public List<Result> results { get; set; }
    }


}
